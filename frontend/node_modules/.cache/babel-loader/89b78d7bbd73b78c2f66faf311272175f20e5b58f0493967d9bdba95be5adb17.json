{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"/Users/Zainab/GA/after_GA/flamingo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __async = function __async(__this, __arguments, generator) {\n  return new Promise(function (resolve, reject) {\n    var fulfilled = function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = function rejected(value) {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = function step(x) {\n      return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    };\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/YouTube.tsx\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport isEqual from \"fast-deep-equal\";\nimport youTubePlayer from \"youtube-player\";\nfunction shouldUpdateVideo(prevProps, props) {\n  var _a, _b;\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n  var prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n  var vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return __spreadProps(__spreadValues({}, opts), {\n    height: 0,\n    width: 0,\n    playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\nfunction shouldResetPlayer(prevProps, props) {\n  return prevProps.videoId !== props.videoId || !isEqual(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n  var _a, _b, _c, _d;\n  return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n  videoId: \"\",\n  id: \"\",\n  className: \"\",\n  iframeClassName: \"\",\n  style: {},\n  title: \"\",\n  loading: void 0,\n  opts: {},\n  onReady: function onReady() {},\n  onError: function onError() {},\n  onPlay: function onPlay() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {},\n  onStateChange: function onStateChange() {},\n  onPlaybackRateChange: function onPlaybackRateChange() {},\n  onPlaybackQualityChange: function onPlaybackQualityChange() {}\n};\nvar propTypes = {\n  videoId: PropTypes.string,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  iframeClassName: PropTypes.string,\n  style: PropTypes.object,\n  title: PropTypes.string,\n  loading: PropTypes.oneOf([\"lazy\", \"eager\"]),\n  opts: PropTypes.objectOf(PropTypes.any),\n  onReady: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onPlaybackQualityChange: PropTypes.func\n};\nvar _YouTube = /*#__PURE__*/function (_React$Component) {\n  _inherits(_YouTube, _React$Component);\n  var _super = _createSuper(_YouTube);\n  function _YouTube(props) {\n    var _this;\n    _classCallCheck(this, _YouTube);\n    _this = _super.call(this, props);\n    _this.destroyPlayerPromise = void 0;\n    _this.onPlayerReady = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onReady) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerError = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onError) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerStateChange = function (event) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      (_b = (_a = _this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n      switch (event.data) {\n        case _YouTube.PlayerState.ENDED:\n          (_d = (_c = _this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n          break;\n        case _YouTube.PlayerState.PLAYING:\n          (_f = (_e = _this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n          break;\n        case _YouTube.PlayerState.PAUSED:\n          (_h = (_g = _this.props).onPause) == null ? void 0 : _h.call(_g, event);\n          break;\n        default:\n      }\n    };\n    _this.onPlayerPlaybackRateChange = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerPlaybackQualityChange = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.destroyPlayer = function () {\n      if (_this.internalPlayer) {\n        _this.destroyPlayerPromise = _this.internalPlayer.destroy().then(function () {\n          return _this.destroyPlayerPromise = void 0;\n        });\n        return _this.destroyPlayerPromise;\n      }\n      return Promise.resolve();\n    };\n    _this.createPlayer = function () {\n      if (typeof document === \"undefined\") return;\n      if (_this.destroyPlayerPromise) {\n        _this.destroyPlayerPromise.then(_this.createPlayer);\n        return;\n      }\n      var playerOpts = __spreadProps(__spreadValues({}, _this.props.opts), {\n        videoId: _this.props.videoId\n      });\n      _this.internalPlayer = youTubePlayer(_this.container, playerOpts);\n      _this.internalPlayer.on(\"ready\", _this.onPlayerReady);\n      _this.internalPlayer.on(\"error\", _this.onPlayerError);\n      _this.internalPlayer.on(\"stateChange\", _this.onPlayerStateChange);\n      _this.internalPlayer.on(\"playbackRateChange\", _this.onPlayerPlaybackRateChange);\n      _this.internalPlayer.on(\"playbackQualityChange\", _this.onPlayerPlaybackQualityChange);\n      if (_this.props.title || _this.props.loading) {\n        _this.internalPlayer.getIframe().then(function (iframe) {\n          if (_this.props.title) iframe.setAttribute(\"title\", _this.props.title);\n          if (_this.props.loading) iframe.setAttribute(\"loading\", _this.props.loading);\n        });\n      }\n    };\n    _this.resetPlayer = function () {\n      return _this.destroyPlayer().then(_this.createPlayer);\n    };\n    _this.updatePlayer = function () {\n      var _a;\n      (_a = _this.internalPlayer) == null ? void 0 : _a.getIframe().then(function (iframe) {\n        if (_this.props.id) iframe.setAttribute(\"id\", _this.props.id);else iframe.removeAttribute(\"id\");\n        if (_this.props.iframeClassName) iframe.setAttribute(\"class\", _this.props.iframeClassName);else iframe.removeAttribute(\"class\");\n        if (_this.props.opts && _this.props.opts.width) iframe.setAttribute(\"width\", _this.props.opts.width.toString());else iframe.removeAttribute(\"width\");\n        if (_this.props.opts && _this.props.opts.height) iframe.setAttribute(\"height\", _this.props.opts.height.toString());else iframe.removeAttribute(\"height\");\n        if (_this.props.title) iframe.setAttribute(\"title\", _this.props.title);else iframe.setAttribute(\"title\", \"YouTube video player\");\n        if (_this.props.loading) iframe.setAttribute(\"loading\", _this.props.loading);else iframe.removeAttribute(\"loading\");\n      });\n    };\n    _this.getInternalPlayer = function () {\n      return _this.internalPlayer;\n    };\n    _this.updateVideo = function () {\n      var _a, _b, _c, _d;\n      if (typeof _this.props.videoId === \"undefined\" || _this.props.videoId === null) {\n        (_a = _this.internalPlayer) == null ? void 0 : _a.stopVideo();\n        return;\n      }\n      var autoplay = false;\n      var opts = {\n        videoId: _this.props.videoId\n      };\n      if ((_b = _this.props.opts) == null ? void 0 : _b.playerVars) {\n        autoplay = _this.props.opts.playerVars.autoplay === 1;\n        if (\"start\" in _this.props.opts.playerVars) {\n          opts.startSeconds = _this.props.opts.playerVars.start;\n        }\n        if (\"end\" in _this.props.opts.playerVars) {\n          opts.endSeconds = _this.props.opts.playerVars.end;\n        }\n      }\n      if (autoplay) {\n        (_c = _this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n        return;\n      }\n      (_d = _this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n    };\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n    _this.container = null;\n    _this.internalPlayer = null;\n    return _this;\n  }\n  _createClass(_YouTube, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createPlayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (shouldUpdatePlayer(prevProps, this.props)) {\n                this.updatePlayer();\n              }\n              if (!shouldResetPlayer(prevProps, this.props)) {\n                _context.next = 4;\n                break;\n              }\n              _context.next = 4;\n              return this.resetPlayer();\n            case 4:\n              if (shouldUpdateVideo(prevProps, this.props)) {\n                this.updateVideo();\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyPlayer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */React.createElement(\"div\", {\n        className: this.props.className,\n        style: this.props.style\n      }, /* @__PURE__ */React.createElement(\"div\", {\n        id: this.props.id,\n        className: this.props.iframeClassName,\n        ref: this.refContainer\n      }));\n    }\n  }]);\n  return _YouTube;\n}(React.Component);\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\nvar YouTube_default = YouTube;\nexport { YouTube_default as default };","map":{"version":3,"names":["PropTypes","React","isEqual","youTubePlayer","shouldUpdateVideo","prevProps","props","_a","_b","videoId","prevVars","opts","playerVars","vars","start","end","filterResetOptions","arguments","length","undefined","__spreadProps","__spreadValues","height","width","autoplay","shouldResetPlayer","shouldUpdatePlayer","_c","_d","id","className","iframeClassName","title","defaultProps","style","loading","onReady","onError","onPlay","onPause","onEnd","onStateChange","onPlaybackRateChange","onPlaybackQualityChange","propTypes","string","object","oneOf","objectOf","any","func","_YouTube","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","destroyPlayerPromise","onPlayerReady","event","onPlayerError","onPlayerStateChange","_e","_f","_g","_h","data","PlayerState","ENDED","PLAYING","PAUSED","onPlayerPlaybackRateChange","onPlayerPlaybackQualityChange","destroyPlayer","internalPlayer","destroy","then","Promise","resolve","createPlayer","document","playerOpts","container","on","getIframe","iframe","setAttribute","resetPlayer","updatePlayer","removeAttribute","toString","getInternalPlayer","updateVideo","stopVideo","startSeconds","endSeconds","loadVideoById","cueVideoById","refContainer","_createClass","key","value","componentDidMount","componentDidUpdate","__async","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","componentWillUnmount","render","createElement","ref","Component","YouTube","UNSTARTED","BUFFERING","CUED","YouTube_default"],"sources":["/Users/Zainab/GA/after_GA/flamingo/node_modules/react-youtube/src/YouTube.tsx"],"sourcesContent":["/** @jsxRuntime classic */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport isEqual from 'fast-deep-equal';\nimport youTubePlayer from 'youtube-player';\nimport type { YouTubePlayer, Options } from 'youtube-player/dist/types';\n\n/**\n * Check whether a `props` change should result in the video being updated.\n */\nfunction shouldUpdateVideo(prevProps: YouTubeProps, props: YouTubeProps) {\n  // A changing video should always trigger an update\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n\n  // Otherwise, a change in the start/end time playerVars also requires a player\n  // update.\n  const prevVars = prevProps.opts?.playerVars || {};\n  const vars = props.opts?.playerVars || {};\n\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\n\n/**\n * Neutralize API options that only require a video update, leaving only options\n * that require a player reset. The results can then be compared to see if a\n * player reset is necessary.\n */\nfunction filterResetOptions(opts: Options = {}) {\n  return {\n    ...opts,\n    height: 0,\n    width: 0,\n    playerVars: {\n      ...opts.playerVars,\n      autoplay: 0,\n      start: 0,\n      end: 0,\n    },\n  };\n}\n\n/**\n * Check whether a `props` change should result in the player being reset.\n * The player is reset when the `props.opts` change, except if the only change\n * is in the `start` and `end` playerVars, because a video update can deal with\n * those.\n */\nfunction shouldResetPlayer(prevProps: YouTubeProps, props: YouTubeProps) {\n  return (\n    prevProps.videoId !== props.videoId || !isEqual(filterResetOptions(prevProps.opts), filterResetOptions(props.opts))\n  );\n}\n\n/**\n * Check whether a props change should result in an update of player.\n */\nfunction shouldUpdatePlayer(prevProps: YouTubeProps, props: YouTubeProps) {\n  return (\n    prevProps.id !== props.id ||\n    prevProps.className !== props.className ||\n    prevProps.opts?.width !== props.opts?.width ||\n    prevProps.opts?.height !== props.opts?.height ||\n    prevProps.iframeClassName !== props.iframeClassName ||\n    prevProps.title !== props.title\n  );\n}\n\ntype YoutubePlayerCueVideoOptions = {\n  videoId: string;\n  startSeconds?: number;\n  endSeconds?: number;\n  suggestedQuality?: string;\n};\n\nexport { YouTubePlayer };\n\nexport type YouTubeEvent<T = any> = {\n  data: T;\n  target: YouTubePlayer;\n};\n\nexport type YouTubeProps = {\n  /**\n   * The YouTube video ID.\n   *\n   * Examples\n   * - https://www.youtube.com/watch?v=XxVg_s8xAms (`XxVg_s8xAms` is the ID)\n   * - https://www.youtube.com/embed/-DX3vJiqxm4 (`-DX3vJiqxm4` is the ID)\n   */\n  videoId?: string;\n  /**\n   * Custom ID for the player element\n   */\n  id?: string;\n  /**\n   * Custom class name for the player element\n   */\n  className?: string;\n  /**\n   * Custom class name for the iframe element\n   */\n  iframeClassName?: string;\n  /**\n   * Custom style for the player container element\n   */\n  style?: React.CSSProperties;\n  /**\n   * Title of the video for the iframe's title tag.\n   */\n  title?: React.IframeHTMLAttributes<HTMLIFrameElement>['title'];\n  /**\n   * Indicates how the browser should load the iframe\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-loading}\n   */\n  loading?: React.IframeHTMLAttributes<HTMLIFrameElement>['loading'];\n  /**\n   * An object that specifies player options\n   * {@link https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player}\n   */\n  opts?: Options;\n  /**\n   * This event fires whenever a player has finished loading and is ready to begin receiving API calls.\n   * {@link https://developers.google.com/youtube/iframe_api_reference#onReady}\n   */\n  onReady?: (event: YouTubeEvent) => void;\n  /**\n   * This event fires if an error occurs in the player.\n   * {@link https://developers.google.com/youtube/iframe_api_reference#onError}\n   */\n  onError?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires when the layer's state changes to PlayerState.PLAYING.\n   */\n  onPlay?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires when the layer's state changes to PlayerState.PAUSED.\n   */\n  onPause?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires when the layer's state changes to PlayerState.ENDED.\n   */\n  onEnd?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires whenever the player's state changes.\n   * {@link https://developers.google.com/youtube/iframe_api_reference#onStateChange}\n   */\n  onStateChange?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires whenever the video playback quality changes.\n   * {@link https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange}\n   */\n  onPlaybackRateChange?: (event: YouTubeEvent<number>) => void;\n  /**\n   * This event fires whenever the video playback rate changes.\n   * {@link https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange}\n   */\n  onPlaybackQualityChange?: (event: YouTubeEvent<string>) => void;\n};\n\nconst defaultProps: YouTubeProps = {\n  videoId: '',\n  id: '',\n  className: '',\n  iframeClassName: '',\n  style: {},\n  title: '',\n  loading: undefined,\n  opts: {},\n  onReady: () => {},\n  onError: () => {},\n  onPlay: () => {},\n  onPause: () => {},\n  onEnd: () => {},\n  onStateChange: () => {},\n  onPlaybackRateChange: () => {},\n  onPlaybackQualityChange: () => {},\n};\n\nconst propTypes = {\n  videoId: PropTypes.string,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  iframeClassName: PropTypes.string,\n  style: PropTypes.object,\n  title: PropTypes.string,\n  loading: PropTypes.oneOf(['lazy', 'eager']),\n  opts: PropTypes.objectOf(PropTypes.any),\n  onReady: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onPlaybackQualityChange: PropTypes.func,\n};\n\nclass YouTube extends React.Component<YouTubeProps> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  /**\n   * Expose PlayerState constants for convenience. These constants can also be\n   * accessed through the global YT object after the YouTube IFrame API is instantiated.\n   * https://developers.google.com/youtube/iframe_api_reference#onStateChange\n   */\n  static PlayerState = {\n    UNSTARTED: -1,\n    ENDED: 0,\n    PLAYING: 1,\n    PAUSED: 2,\n    BUFFERING: 3,\n    CUED: 5,\n  };\n\n  container: HTMLDivElement | null;\n  internalPlayer: YouTubePlayer | null;\n\n  constructor(props: any) {\n    super(props);\n\n    this.container = null;\n    this.internalPlayer = null;\n  }\n\n  /**\n   * Note: The `youtube-player` package that is used promisifies all YouTube\n   * Player API calls, which introduces a delay of a tick before it actually\n   * gets destroyed.\n   *\n   * The promise to destroy the player is stored here so we can make sure to\n   * only re-create the Player after it's been destroyed.\n   *\n   * See: https://github.com/tjallingt/react-youtube/issues/355\n   */\n  destroyPlayerPromise: Promise<void> | undefined = undefined;\n\n  componentDidMount() {\n    this.createPlayer();\n  }\n\n  async componentDidUpdate(prevProps: YouTubeProps) {\n    if (shouldUpdatePlayer(prevProps, this.props)) {\n      this.updatePlayer();\n    }\n\n    if (shouldResetPlayer(prevProps, this.props)) {\n      await this.resetPlayer();\n    }\n\n    if (shouldUpdateVideo(prevProps, this.props)) {\n      this.updateVideo();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyPlayer();\n  }\n\n  /**\n   * This event fires whenever a player has finished loading and is ready to begin receiving API calls.\n   * https://developers.google.com/youtube/iframe_api_reference#onReady\n   */\n  onPlayerReady = (event: YouTubeEvent) => this.props.onReady?.(event);\n\n  /**\n   * This event fires if an error occurs in the player.\n   * https://developers.google.com/youtube/iframe_api_reference#onError\n   */\n  onPlayerError = (event: YouTubeEvent<number>) => this.props.onError?.(event);\n\n  /**\n   * This event fires whenever the video playback quality changes.\n   * https://developers.google.com/youtube/iframe_api_reference#onStateChange\n   */\n  onPlayerStateChange = (event: YouTubeEvent<number>) => {\n    this.props.onStateChange?.(event);\n    // @ts-ignore\n    switch (event.data) {\n      case YouTube.PlayerState.ENDED:\n        this.props.onEnd?.(event);\n        break;\n\n      case YouTube.PlayerState.PLAYING:\n        this.props.onPlay?.(event);\n        break;\n\n      case YouTube.PlayerState.PAUSED:\n        this.props.onPause?.(event);\n        break;\n\n      default:\n    }\n  };\n\n  /**\n   * This event fires whenever the video playback quality changes.\n   * https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange\n   */\n  onPlayerPlaybackRateChange = (event: YouTubeEvent<number>) => this.props.onPlaybackRateChange?.(event);\n\n  /**\n   * This event fires whenever the video playback rate changes.\n   * https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange\n   */\n  onPlayerPlaybackQualityChange = (event: YouTubeEvent<string>) => this.props.onPlaybackQualityChange?.(event);\n\n  /**\n   * Destroy the YouTube Player using its async API and store the promise so we\n   * can await before re-creating it.\n   */\n  destroyPlayer = () => {\n    if (this.internalPlayer) {\n      this.destroyPlayerPromise = this.internalPlayer.destroy().then(() => (this.destroyPlayerPromise = undefined));\n      return this.destroyPlayerPromise;\n    }\n    return Promise.resolve();\n  };\n\n  /**\n   * Initialize the YouTube Player API on the container and attach event handlers\n   */\n  createPlayer = () => {\n    // do not attempt to create a player server-side, it won't work\n    if (typeof document === 'undefined') return;\n    if (this.destroyPlayerPromise) {\n      // We need to first await the existing player to be destroyed before\n      // we can re-create it.\n      this.destroyPlayerPromise.then(this.createPlayer);\n      return;\n    }\n    // create player\n    const playerOpts: Options = {\n      ...this.props.opts,\n      // preload the `videoId` video if one is already given\n      videoId: this.props.videoId,\n    };\n    this.internalPlayer = youTubePlayer(this.container!, playerOpts);\n    // attach event handlers\n    this.internalPlayer.on('ready', this.onPlayerReady as any);\n    this.internalPlayer.on('error', this.onPlayerError as any);\n    this.internalPlayer.on('stateChange', this.onPlayerStateChange as any);\n    this.internalPlayer.on('playbackRateChange', this.onPlayerPlaybackRateChange as any);\n    this.internalPlayer.on('playbackQualityChange', this.onPlayerPlaybackQualityChange as any);\n    if (this.props.title || this.props.loading) {\n      this.internalPlayer.getIframe().then((iframe) => {\n        if (this.props.title) iframe.setAttribute('title', this.props.title);\n        if (this.props.loading) iframe.setAttribute('loading', this.props.loading);\n      });\n    }\n  };\n\n  /**\n   * Shorthand for destroying and then re-creating the YouTube Player\n   */\n  resetPlayer = () => this.destroyPlayer().then(this.createPlayer);\n\n  /**\n   * Method to update the id and class of the YouTube Player iframe.\n   * React should update this automatically but since the YouTube Player API\n   * replaced the DIV that is mounted by React we need to do this manually.\n   */\n  updatePlayer = () => {\n    this.internalPlayer?.getIframe().then((iframe) => {\n      if (this.props.id) iframe.setAttribute('id', this.props.id);\n      else iframe.removeAttribute('id');\n      if (this.props.iframeClassName) iframe.setAttribute('class', this.props.iframeClassName);\n      else iframe.removeAttribute('class');\n      if (this.props.opts && this.props.opts.width) iframe.setAttribute('width', this.props.opts.width.toString());\n      else iframe.removeAttribute('width');\n      if (this.props.opts && this.props.opts.height) iframe.setAttribute('height', this.props.opts.height.toString());\n      else iframe.removeAttribute('height');\n      if (this.props.title) iframe.setAttribute('title', this.props.title);\n      else iframe.setAttribute('title', 'YouTube video player');\n      if (this.props.loading) iframe.setAttribute('loading', this.props.loading);\n      else iframe.removeAttribute('loading');\n    });\n  };\n\n  /**\n   *  Method to return the internalPlayer object.\n   */\n  getInternalPlayer = () => {\n    return this.internalPlayer;\n  };\n\n  /**\n   * Call YouTube Player API methods to update the currently playing video.\n   * Depending on the `opts.playerVars.autoplay` this function uses one of two\n   * YouTube Player API methods to update the video.\n   */\n  updateVideo = () => {\n    if (typeof this.props.videoId === 'undefined' || this.props.videoId === null) {\n      this.internalPlayer?.stopVideo();\n      return;\n    }\n\n    // set queueing options\n    let autoplay = false;\n    const opts: YoutubePlayerCueVideoOptions = {\n      videoId: this.props.videoId,\n    };\n\n    if (this.props.opts?.playerVars) {\n      autoplay = this.props.opts.playerVars.autoplay === 1;\n      if ('start' in this.props.opts.playerVars) {\n        opts.startSeconds = this.props.opts.playerVars.start;\n      }\n      if ('end' in this.props.opts.playerVars) {\n        opts.endSeconds = this.props.opts.playerVars.end;\n      }\n    }\n\n    // if autoplay is enabled loadVideoById\n    if (autoplay) {\n      this.internalPlayer?.loadVideoById(opts);\n      return;\n    }\n    // default behaviour just cues the video\n    this.internalPlayer?.cueVideoById(opts);\n  };\n\n  refContainer = (container: HTMLDivElement) => {\n    this.container = container;\n  };\n\n  render() {\n    return (\n      <div className={this.props.className} style={this.props.style}>\n        <div id={this.props.id} className={this.props.iframeClassName} ref={this.refContainer} />\n      </div>\n    );\n  }\n}\n\nexport default YouTube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}